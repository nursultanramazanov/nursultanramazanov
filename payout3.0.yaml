openapi: 3.0.0
info:
  description: |
    # Техническое описание сервиса выплат версия 3.0.3

    # Формирование подписи
    Любые сообщения (запросы и ответы) между PayBox'ом и магазином
    подписываются. Для формирования подписи необходимо
    конкатенировать с разделителем `;`
      1. имя вызываемого скрипта (от последнего `/` до конца или `?`)
      2. все поля сообщения в алфавитном порядке, включая случайную
        строку `pg_salt`, состоящую из произвольного количества цифр и
        латинских букв, при этом:
          - a. к вложенным тегам это правило применяется рекурсивно (только XML)
          - b. поля с одинаковыми именами берутся в том порядке, в
      котором они присутствуют в сообщении
      3. и платежный пароль `secret_key`, который задается в настройках
      магазина и известен только магазину и PayBox'у.

    От полученной в результате конкатенации строки необходимо вычислить
    md5 и добавить в запрос или ответ в качестве дополнительного параметра
    `pg_sig`. MD5 хэш записывается в виде шестнадцатеричной строки в нижнем
    регистре (32 символа).

    Любая сторона может добавлять в запрос или ответ дополнительные параметры,
    не указанные в документации. Эти параметры также участвуют в вычислении
    подписи.
    Сообщение не подписывается, и соответственно поля `pg_salt` и `pg_sig`
    отсутствуют только в одном случае – когда PayBox не смог
    идентифицировать мерчанта и поэтому не знает его secret_key. В таком
    случае поле `pg_error_code` (числовой код ошибки) принимает значение
    **101**. Полный список возможных значений поля `pg_error_code` см. в
    разделе **Справочник кодов ошибок**.

    # Способы передачи информации
    Используются три способа передачи информации между
    магазином и PayBox'ом:
    1. Методом GET – данные передаются в параметрах методом GET
    При передаче через GET, сложных структурированных данных,
    таких как многомерные массивы, используется следующий формат записи:<br>
    `https://api.paybox.money/script.php?param_1=val&param_2[subParam_1]=val2&
    param_2[subParam_2]=val3&param_3=val4`
    2. Методом POST – данные передаются в параметрах методом POST.
    Структурные данные при работе через POST, формируются
    аналогичным образом.
    3. Через XML – запросы передаются методом POST в единственном
    параметре `pg_xml`, который представляет собой XML вида:

    ```xml
      <?xml version="1.0" encoding="utf-8"?>
        <request>
          <pg_param1>value1</pg_param>
          <pg_param2>value2</pg_param>
        </request>
    ```
    В ответе обязательно присутствует поле `pg_status`, которое показывает
    результат выполнения запроса. `pg_status` может быть равно **ok** в случае
    успешной обработки запроса, **error** в случае ошибки. В последнем случае
    также могут присутствовать поля:<br>
    `pg_error_code` – числовой код ошибки (обязательное поле;
    список возможных значений см. В разделе **Справочник кодов ошибок**).<br>
    `pg_error_description` – описание ошибки (необязательное поле)
    В ответах на отдельные запросы возможны и другие значения `pg_status`,
    кроме **ok** и **error**.

  version: "3.0"
  title: API для выплат PayBox.Money
  contact:
    email: info@paybox.money
tags:
  - name: Базовые запросы
  - name: P2P
  - name: Дополнительные запросы
servers:
  - description: Сервер PayBox
    url: https://api.paybox.money
paths:
  /api/reg2nonreg:
    post:
      tags:
        - Базовые запросы
      summary: Выплата с зарегистрированный карты на незарегистрированную
      description: |
        `XML` - запросы передаются методом **POST** в единственном параметре `pg_xml`,
        который представляет собой XML документ.
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              type: object
              properties:
                pg_merchant_id:
                  type: integer
                  description: Merchant ID в системе Paybox
                pg_order_id:
                  type: integer
                  description: |
                    ID заказа в системе продавца.
                    Рекомендуется уникальное, монотонно возрастающее значение
                pg_amount:
                  type: number
                  description: Сумма перевода
                pg_user_email:
                  type: string
                  format: email
                  description: Email пользователя в системе продавца
                pg_user_id:
                  type: string
                  description: ID пользователя в системе продавца
                pg_description:
                  type: string
                  description: Описание платежа
                pg_back_link:
                  type: string
                  format: url
                  description: URL, на который перенаправляется пользователь, в случае успешной оплаты
                pg_post_link:
                  type: string
                  format: url
                  description: Url на который отправляется ответ о статусе платежа
                pg_order_time_limit:
                  type: string
                  format: 'date-time'
                  description: Лимит времени на проведение платежа
                pg_salt:
                  type: string
                  description: Случайная строка, состоящая из произвольных цифр и латинских букв
                pg_sig:
                  type: string
                  description: Цифровая подпись запроса
              required:
                - pg_merchant_id
                - pg_order_id
                - pg_amount
                - pg_description
                - pg_back_link
                - pg_post_link
                - pg_order_time_limit
                - pg_salt
                - pg_sig
      responses:
        200:
          x-summary: В случае успеха, система вернет XML
          description: |
            В случае успешного ответа, пользователя необходимо перенаправить на URL, указанный в параметре
            `pg_redirect_url`. Отобразится страница для ввода данных карты, на которой нужно совершить платеж
          content:
            application/xml:
              example: |
                <?xml version="1.0" encoding="UTF- 8"?>
                <response>
                  <pg_payment_id>765432</pg_payment_id>//id транзакции в системе PayBox
                  <pg_merchant_id>123</pg_merchant_id>//merchant_id в системе PayBox
                  <pg_status>ok</pg_status>//статус операции
                  <pg_redirect_url>https://api.paybox.money/reg2nonreg_redirect?payment_id=765432</pg_redirect_url>//ссылка на которую необходим редирект
                  <pg_salt>yNSdZrM1pIA4NjRU5Csdm0L3NC92PZpo</pg_salt>//соль
                  <pg_sig>6304300d2a1d5d35cfbdc37ae8490c81</pg_sig>//сигнатура
                </response>
              schema:
                type: object
                properties:
                  pg_payment_id:
                    type: integer
                    description: id транзакции в системе PayBox
                  pg_merchant_id:
                    type: integer
                    description: id мерчанта в системе PayBox
                  pg_status:
                    type: string
                    description: статус операции
                  pg_redirect_url:
                    type: string
                    format: url
                    description: ссылка на которую необходим редирект
                  pg_salt:
                    type: string
                    description: соль
                  pg_sig:
                    type: string
                    description: сигнатура
                required:
                  - pg_payment_id
                  - pg_merchant_id
                  - pg_status
                  - pg_redirect_url
                  - pg_salt
                  - pg_sig
        default:
          description: В случае неудачи система вернет XML
          content:
            application/xml:
              example: |
                <?xml version="1.0" encoding="UTF-8"?>
                <response>
                  <pg_status>error</pg_status>//статус операции
                  <pg_error_code>101</pg_error_code>//код ошибки
                  <pg_error_description>Empty merchant</pg_error_description>//описание
                  <pg_salt>yNSdZrM1pIA4NjRU5Csdm0L3NC92PZpo</pg_salt> //Соль
                  <pg_sig>6304300d2a1d5d35cfbdc37ae8490c81</pg_sig>//сигнатура
                </response>
              schema:
                $ref: '#/components/schemas/error'
      callbacks:
        postLink:
          '{$request.body#/pg_post_link}':
            servers:
              - description: Сервер Магазина
                url: "https://example.com"
            post:
              summary: Уведомление на post_link в случае успеха
              requestBody:
                required: true
                content:
                  application/xml:
                    schema:
                      type: object
                      properties:
                        pg_payment_id:
                          type: integer
                          description: ID транзакции в системе Paybox
                        pg_merchant_id:
                          type: integer
                          description: ID мерчанта в системе PayBox
                        pg_status:
                          type: string
                          description: Статус платежа
                        pg_order_id:
                          type: integer
                          description: ID заказа в системе клиента
                        pg_balance:
                          type: number
                          description: Баланс мерчанта в системе Paybox
                        pg_card_hash:
                          type: string
                          description: Карта, на которую был совершен платеж
                        pg_card_id:
                          type: integer
                          description: идентификатор карты получателя
                        pg_payment_amount:
                          type: number
                          description: Сумма платежа
                        pg_to_pay:
                          type: number
                          description: Сумма с учетом комиссии
                        pg_payment_date:
                          type: string
                          format: 'date-time'
                          description: Дата и время проведения платежа
                        pg_salt:
                          type: string
                          description: Случайная строка, состоящая из произвольных цифр и латинских букв
                        pg_sig:
                          type: string
                          description: Цифровая подпись запроса
              responses:
                200:
                  description: Мерчант должен ответить статусом 200
      x-code-samples:
        - lang: XML
          source: |
            <?xml version="1.0" encoding="utf-8"?>
            <request>
              <pg_amount>300</pg_amount>
              <pg_merchant_id>123</pg_merchant_id>
              <pg_order_id>1</pg_order_id>
              <pg_e_id>2</pg_e_id>
              <pg_description>testpay</pg_description>
              <pg_post_link>test.com/script</pg_post_link>
              <pg_back_link>test.om/back</pg_back_link>
              <pg_order_time_limit>2016-05-12</pg_order_time_limit>
              <pg_salt>3</pg_salt>
              <pg_sig>uIUHSdah84189</pg_sig>
            </request>
  /api/reg2reg:
    post:
      tags:
        - Базовые запросы
      summary: Перевод с зарегистрированной карты на зарегистрированную
      requestBody:
        required: true
        content:
          application/xml:
            example: |
              <?xml version="1.0" encoding="utf-8"?>
              <request>
                <pg_amount>300</pg_amount>
                <pg_merchant_id>123</pg_merchant_id>
                <pg_order_id>1</pg_order_id>
                <pg_user_id>2</pg_user_id>
                <pg_card_id_to>3</pg_card_id_to>
                <pg_description>testpay</pg_description>
                <pg_post_link>test.com/script&pg_back_link=test.com/back</pg_post_link>
                <pg_order_time_limit>20160512</pg_order_time_limit>
                <pg_salt>4</pg_salt>
                <pg_sig>uIUHSdah841899</pg_sig>
              </request>
            schema:
              type: object
              properties:
                pg_merchant_id:
                  type: integer
                  description: Merchant ID в системе Paybox
                pg_order_id:
                  type: integer
                  description: |
                    ID заказа в системе продавца. Рекомендуется уникальное,
                    монотонно возрастающее значение
                pg_amount:
                  type: number
                  description: Сумма перевода
                pg_user_id:
                  type: string
                  description: ID пользователя в системе продавца
                pg_card_id_to:
                  type: string
                  description: ID карты на которую нужно перевести деньги (возвращается при регистрации карты)
                pg_description:
                  type: string
                  description: Описание платежа
                pg_post_link:
                  type: string
                  description: Url на который отправляется ответ о статусе платежа
                pg_order_time_limit:
                  type: string
                  format: 'date-time'
                  description: Лимит времени на проведение платежа
                pg_salt:
                  type: string
                  description: Случайная строка, состоящая из произвольных цифр и латинских букв
                pg_sig:
                  type: string
                  description: Цифровая подпись запроса
              required:
                - pg_merchant_id
                - pg_order_id
                - pg_amount
                - pg_user_id
                - pg_card_id_to
                - pg_description
                - pg_post_link
                - pg_order_time_limit
                - pg_salt
                - pg_sig
      responses:
        200:
          description: В случае успеха, система вернет XML такого вида и аналогичное уведомление на post_link
          content:
            application/xml:
              example: |
                <?xml version="1.0" encoding="UTF- 8"?>
                <response>
                  <pg_payment_id>765432</pg_payment_id>//id транзакции в системе PayBox
                  <pg_merchant_id>123</pg_merchant_id>//merchant_id в системе PayBox
                  <pg_status>ok</pg_status>//статус операции
                  <pg_order_id>1</pg_order_id>//номер заказа
                  <pg_balance>400</pg_balance>//баланс после перевода
                  <pg_card_hash>ok</pg_card_hash>//хэш карты получателя
                  <pg_card_id>3</pg_card_id>//идентификатор карты получателя
                  <pg_payment_amount>300</pg_payment_amount>//сумма перевода
                  <pg_payment_date>dateTime</pg_payment_date>//дата перевода
                  <pg_salt>yNSdZrM1pIA4NjRU5Csdm0L3NC92PZpo</pg_salt>//соль
                  <pg_sig>6304300d2a1d5d35cfbdc37ae8490c81</pg_sig>//сигнатура
                </response>
              schema:
                type: object
                properties:
                  pg_payment_id:
                    type: integer
                    description: ID транзакции в системе Paybox
                  pg_merchant_id:
                    type: integer
                    description: ID мерчанта в системе PayBox
                  pg_status:
                    type: string
                    description: Статус платежа
                  pg_order_id:
                    type: integer
                    description: ID заказа в системе клиента
                  pg_balance:
                    type: number
                    description: Баланс мерчанта в системе Paybox
                  pg_card_hash:
                    type: string
                    description: Карта, на которую был совершен платеж
                  pg_card_id:
                    type: integer
                    description: идентификатор карты получателя
                  pg_payment_amount:
                    type: number
                    description: Сумма платежа
                  pg_payment_date:
                    type: string
                    format: 'date-time'
                    description: Дата и время проведения платежа
                  pg_salt:
                    type: string
                    description: Случайная строка, состоящая из произвольных цифр и латинских букв
                  pg_sig:
                    type: string
                    description: Цифровая подпись запроса
        default:
          description: В случае неудачи, система вернет XML
          content:
            application/xml:
              example: |
                <?xml version="1.0" encoding="UTF-8"?>
                <response>
                  <pg_status>error</pg_status>//статус операции
                  <pg_error_code>101</pg_error_code>//код ошибки
                  <pg_error_description>Empty merchant</pg_error_description>//описание
                  <pg_salt>yNSdZrM1pIA4NjRU5Csdm0L3NC92PZpo</pg_salt> //Соль
                  <pg_sig>6304300d2a1d5d35cfbdc37ae8490c81</pg_sig>//сигнатура
                </response>
              schema:
                $ref: '#/components/schemas/error'
  /api/p2p:
    post:
      operationId: p2p
      tags:
        - P2P
      summary: P2P перевод
      description: "<span style='color:red'>Требуется PCI DCC сертификат</span>"
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              type: object
              properties:
                pg_merchant_id:
                  type: integer
                  description: Merchant ID в системе Paybox
                pg_order_id:
                  type: integer
                  description: ID заказа в системе продавца. Рекомендуется уникальное, монотонно возрастающее значение.
                pg_amount:
                  type: number
                  description: Сумма перевода
                pg_user_id:
                  type: string
                  description: ID пользователя в системе продавца.
                pg_cvc:
                  type: integer
                  description: Трёхзначный код проверки подлинности карты
                pg_month:
                  type: string
                  description: Срок действия карты (месяц) mm
                pg_year:
                  type: string
                  description: Срок действия карты (год) yy
                pg_pan:
                  type: integer
                  description: Номер карты отправителя
                pg_payment_to:
                  type: integer
                  description: Номер карты получателя
                pg_fromName:
                  type: string
                  description: Имя отправителя (на карте)
                pg_post_link:
                  type: string
                  description: Url на который отправляется ответ о статусе платежа
                pg_salt:
                  type: string
                  description: Случайная строка, состоящая из произвольных цифр и латинских букв
                pg_sig:
                  type: string
                  description: Цифровая подпись запроса
              required:
                - pg_merchant_id
                - pg_order_id
                - pg_amount
                - pg_user_id
                - pg_cvc
                - pg_month
                - pg_year
                - pg_pan
                - pg_payment_to
                - pg_fromName
                - pg_post_link
                - pg_salt
                - pg_sig
      responses:
        200:
          description: В случае успеха, система вернет XML такого вида и аналогичное уведомление на post_link
          content:
            application/xml:
              example: |
                <?xml version="1.0" encoding="UTF- 8"?>
                <response>
                  <pg_payment_id>765432</pg_payment_id>//id транзакции в системе PayBox
                  <pg_merchant_id>123</pg_merchant_id>//merchant_id в системе PayBox
                  <pg_order_id>1</pg_order_id>//номер заказа
                  <pg_status>ok</pg_status>//статус операции
                  <pg_approval_code>12345</pg_approval_code>//AC операции
                  <pg_reference>12345678</pg_reference>//RRN операции
                  <pg_payment_amount>300</pg_payment_amount>//сумма перевода
                  <pg_payment_date>dateTime</pg_payment_date>//дата перевода
                  <pg_salt>yNSdZrM1pIA4NjRU5Csdm0L3NC92PZpo</pg_salt>//соль
                  <pg_sig>6304300d2a1d5d35cfbdc37ae8490c81</pg_sig>//сигнатура
                </response>
              schema:
                type: object
                properties:
                  pg_payment_id:
                    type: integer
                    description: id транзакции в системе PayBox
                  pg_merchant_id:
                    type: integer
                    description: id мерчанта в системе PayBox
                  pg_status:
                    type: string
                    description: Статус платежа
                  pg_order_id:
                    type: integer
                    description: ID заказа в системе клиента
                  pg_approval_code:
                    type: string
                    description: AC операции
                  pg_reference:
                    type: string
                    description: RRN операции
                  pg_payment_amount:
                    type: number
                    description: Сумма платежа
                  pg_payment_date:
                    type: string
                    format: 'date-time'
                    description: Дата и время проведения платежа
                  pg_salt:
                    type: string
                    description: Случайная строка, состоящая из произвольных цифр и латинских букв
                  pg_sig:
                    type: string
                    description: Цифровая подпись запроса
        default:
          description: В случае неудачи, система вернет XML
          content:
            application/xml:
              example: |
                <?xml version="1.0" encoding="UTF-8"?>
                <response>
                  <pg_status>error</pg_status>//статус операции
                  <pg_error_code>101</pg_error_code>//код ошибки
                  <pg_error_description>Empty merchant</pg_error_description>//описание
                  <pg_salt>yNSdZrM1pIA4NjRU5Csdm0L3NC92PZpo</pg_salt> //Соль
                  <pg_sig>6304300d2a1d5d35cfbdc37ae8490c81</pg_sig>//сигнатура
                </response>
              schema:
                $ref: '#/components/schemas/error'
  /pg_post_link:
    servers:
      - description: Сервер Магазина
        url: "https://example.com"
    post:
      tags:
        - P2P
      summary: Запрос на post_link если на карте установлен 3ds
      description: |
        В случае, если на карте установлен 3ds, необходимо сделать запрос в **ACS** сервер банка
        эмитента карты, где клиент вводит свой 3ds пароль. Для этого Paybox отправит на
        `post_link` параметры указанные ниже.<br>
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              type: object
              properties:
                pg_merchant_id:
                  type: integer
                  description: Merchant ID в системе Paybox
                pg_payment_id:
                  type: number
                  description: ID Транзакции в системе Paybox
                pg_status:
                  type: string
                  description: Статус
                pg_url:
                  type: string
                  format: url
                  description: URL на который нужно перенаправить пользователя
                pg_pareq:
                  type: string
                  description: Параметр необходимый для следующего запроса
                pg_md:
                  type: string
                  description: Параметр необходимый для следующего запроса
                pg_salt:
                  type: string
                  description: Случайная строка, состоящая из произвольных цифр и латинских
                pg_sig:
                  type: string
                  description: Цифровая подпись запроса
      responses:
        200:
          x-summary: Сервер мерчанта должен ответить статусом 200
          description: |
            **Далее необходимо сформировать URL вида**:<br>
            `https://testpay.kkb.kz/jsp/gateway/acs.jsp?PaReq=$pareq&MD=md&TermUrl=$termUrl`<br>
            На этот URL, необходимо перенаправить пользователя. При успешной авторизации на
            странице ввода 3Dsecure, вам на `post_link` (TermUrl) придут данные для следующего запроса на **p2p_secure**.
  /api/p2p_secure:
    post:
      tags:
        - P2P
      summary: Запрос на p2p_secure
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              type: object
              properties:
                pg_merchant_id:
                  type: integer
                  description: Merchant ID в системе Paybox
                pg_payment_id:
                  type: integer
                  description: ID транзакции в системе Paybox
                pg_md:
                  type: string
                  description: Параметр из ответа на предыдущий запрос
                pg_pares:
                  type: string
                  description: Параметр из ответа на предыдущий запрос
                pg_salt:
                  type: string
                  description: Случайная строка, состоящая из произвольных цифр и латинских букв
                pg_sig:
                  type: string
                  description: Цифровая подпись запроса
              required:
                - pg_merchant_id
                - pg_payment_id
                - pg_md
                - pg_pares
                - pg_salt
                - pg_sig
      responses:
        200:
          description: В случае успеха, система вернет XML такого вида и аналогичное уведомление на post_link
          content:
            application/xml:
              example: |
                <?xml version="1.0" encoding="UTF- 8"?>
                <response>
                  <pg_payment_id>765432</pg_payment_id>//id транзакции в системе PayBox
                  <pg_merchant_id>123</pg_merchant_id>//merchant_id в системе PayBox
                  <pg_order_id>1</pg_order_id>//номер заказа
                  <pg_status>ok</pg_status>//статус операции
                  <pg_approval_code>12345</pg_approval_code>//AC операции
                  <pg_reference>12345678</pg_reference>//RRN операции
                  <pg_payment_amount>300</pg_payment_amount>//сумма перевода
                  <pg_payment_date>dateTime</pg_payment_date>//дата перевода
                  <pg_salt>yNSdZrM1pIA4NjRU5Csdm0L3NC92PZpo</pg_salt>//соль
                  <pg_sig>6304300d2a1d5d35cfbdc37ae8490c81</pg_sig>//сигнатура
                </response>
              schema:
                type: object
                properties:
                  pg_payment_id:
                    type: integer
                    description: id транзакции в системе PayBox
                  pg_merchant_id:
                    type: integer
                    description: id мерчанта в системе PayBox
                  pg_status:
                    type: string
                    description: Статус платежа
                  pg_order_id:
                    type: integer
                    description: ID заказа в системе клиента
                  pg_approval_code:
                    type: string
                    description: AC операции
                  pg_reference:
                    type: string
                    description: RRN операции
                  pg_payment_amount:
                    type: number
                    description: Сумма платежа
                  pg_payment_date:
                    type: string
                    format: 'date-time'
                    description: Дата и время проведения платежа
                  pg_salt:
                    type: string
                    description: Случайная строка, состоящая из произвольных цифр и латинских букв
                  pg_sig:
                    type: string
                    description: Цифровая подпись запроса
        default:
          description: В случае неудачи, система вернет XML
          content:
            application/xml:
              example: |
                <?xml version="1.0" encoding="UTF-8"?>
                <response>
                  <pg_status>error</pg_status>//статус операции
                  <pg_error_code>101</pg_error_code>//код ошибки
                  <pg_error_description>Empty merchant</pg_error_description>//описание
                  <pg_salt>yNSdZrM1pIA4NjRU5Csdm0L3NC92PZpo</pg_salt> //Соль
                  <pg_sig>6304300d2a1d5d35cfbdc37ae8490c81</pg_sig>//сигнатура
                </response>
              schema:
                $ref: '#/components/schemas/error'
  /api/p2p2nonreg:
    post:
      summary: P2P перевод с баланса
      description: "<span style='color:red'>Требуется PCI DCC сертификат</span>"
      tags:
        - P2P
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              type: object
              properties:
                pg_merchant_id:
                  type: integer
                  description: Merchant ID в системе Paybox
                pg_order_id:
                  type: integer
                  description: ID заказа в системе продавца. Рекомендуется уникальное, монотонно возрастающее значение
                pg_amount:
                  type: number
                  description: Сумма перевода
                pg_user_id:
                  type: string
                  description: ID пользователя в системе продавца
                pg_payment_to:
                  type: integer
                  description: Номер карты получателя
                pg_description:
                  type: string
                  description: Описание платежа
                pg_post_link:
                  type: string
                  format: url
                  description: Url на который отправляется ответ о статусе платежа
                pg_salt:
                  type: string
                  description: Случайная строка, состоящая из произвольных цифр и латинских букв
                pg_sig:
                  type: string
                  description: Цифровая подпись запроса
              required:
                - pg_merchant_id
                - pg_order_id
                - pg_amount
                - pg_payment_to
                - pg_description
                - pg_post_link
                - pg_salt
                - pg_sig
      responses:
        200:
          description: В случае успеха, система вернет XML такого вида и аналогичное уведомление на post_link
          content:
            application/xml:
              example: |
                <?xml version="1.0" encoding="UTF- 8"?>
                <response>
                  <pg_payment_id>765432</pg_payment_id>//id транзакции в системе PayBox
                  <pg_merchant_id>123</pg_merchant_id>//merchant_id в системе PayBox
                  <pg_order_id>1</pg_order_id>//номер заказа
                  <pg_status>ok</pg_status>//статус операции
                  <pg_balance>600</pg_balance>
                  <pg_payment_amount>300</pg_payment_amount>//сумма перевода
                  <pg_payment_date>dateTime</pg_payment_date>//дата перевода
                  <pg_salt>yNSdZrM1pIA4NjRU5Csdm0L3NC92PZpo</pg_salt>//соль
                  <pg_sig>6304300d2a1d5d35cfbdc37ae8490c81</pg_sig>//сигнатура
                </response>
              schema:
                type: object
                properties:
                  pg_payment_id:
                    type: integer
                    description: id транзакции в системе PayBox
                  pg_merchant_id:
                    type: integer
                    description: id мерчанта в системе PayBox
                  pg_order_id:
                    type: string
                    description: номер заказа
                  pg_status:
                    type: string
                    description: статус операции
                  pg_balance:
                    type: number
                    description: Баланс мерчанта в системе Paybox
                  pg_payment_amount:
                    type: number
                    description: Сумма платежа
                  pg_payment_date:
                    type: string
                    format: 'date-time'
                    description: Дата и время проведения платежа
                  pg_salt:
                    type: string
                    description: Случайная строка, состоящая из произвольных цифр и латинских букв
                  pg_sig:
                    type: string
                    description: Цифровая подпись запроса
        default:
          description: В случае неудачи, система вернет XML
          content:
            application/xml:
              example: |
                <?xml version="1.0" encoding="UTF-8"?>
                <response>
                  <pg_status>error</pg_status>//статус операции
                  <pg_error_code>101</pg_error_code>//код ошибки
                  <pg_error_description>Empty merchant</pg_error_description>//описание
                  <pg_salt>yNSdZrM1pIA4NjRU5Csdm0L3NC92PZpo</pg_salt> //Соль
                  <pg_sig>6304300d2a1d5d35cfbdc37ae8490c81</pg_sig>//сигнатура
                </response>
              schema:
                $ref: '#/components/schemas/error'
  /api/p2p2nonreg_foreign:
    post:
      tags:
        - P2P
      summary: P2P перевод с баланса (на зарубежные карты)
      description: "<span style='color:red'>Требуется PCI DCC сертификат</span>"
      requestBody:
        content:
          application/xml:
            schema:
              type: object
              properties:
                pg_merchant_id:
                  type: integer
                  description: Merchant ID в системе Paybox
                pg_order_id:
                  type: integer
                  description: |
                    ID заказа в системе продавца. Рекомендуется
                    уникальное, монотонно возрастающее значение
                pg_amount:
                  type: number
                  description: Сумма перевода
                pg_user_id:
                  type: string
                  description: ID пользователя в системе продавца
                pg_payment_to:
                  type: integer
                  description: Номер карты получателя
                pg_description:
                  type: string
                  description: Описание платежа
                pg_reg_country:
                  type: string
                  description: Страна проживания получателя
                pg_reg_city:
                  type: string
                  description: Город проживания получателя
                pg_reg_address:
                  type: string
                  description: Адресс проживания получателя
                pg_first_name:
                  type: string
                  description: Имя получателя
                pg_last_name:
                  type: string
                  description: Фамилия получателя
                pg_doc_number:
                  type: string
                  description: Номер документа получателя
                pg_post_link:
                  type: string
                  description: Url на который отправляется ответ о статусе платежа
                pg_salt:
                  type: string
                  description: Случайная строка, состоящая из произвольных цифр и латинских букв
                pg_sig:
                  type: string
                  description: Цифровая подпись запроса
              required:
                - pg_merchant_id
                - pg_order_id
                - pg_amount
                - pg_payment_to
                - pg_description
                - pg_post_link
                - pg_salt
                - pg_sig
      responses:
        200:
          description: Ответ в виде XML
          content:
            application/xml:
              example: |
                <?xml version="1.0" encoding="UTF-8"?>
                <response>
                  <pg_status>error</pg_status>//статус операции
                  <pg_error_code>101</pg_error_code>//код ошибки
                  <pg_error_description>Empty merchant</pg_error_description>//описание
                  <pg_salt>yNSdZrM1pIA4NjRU5Csdm0L3NC92PZpo</pg_salt> //Соль
                  <pg_sig>6304300d2a1d5d35cfbdc37ae8490c81</pg_sig>//сигнатура
                </response>
              schema:
                type: object
                properties:
                  pg_status:
                    type: string
                    description: статус операции
                  pg_error_code:
                    type: integer
                    description: код ошибки
                  pg_error_description:
                    type: string
                    description: описание
                  pg_salt:
                    type: string
                    description: Соль
                  pg_sig:
                    type: string
                    description: сигнатура
        default:
          description: В случае неудачи система вернет XML
          content:
            application/xml:
              example: |
                <?xml version="1.0" encoding="UTF-8"?>
                <response>
                  <pg_status>error</pg_status>//статус операции
                  <pg_error_code>101</pg_error_code>//код ошибки
                  <pg_error_description>Empty merchant</pg_error_description>//описание
                  <pg_salt>yNSdZrM1pIA4NjRU5Csdm0L3NC92PZpo</pg_salt> //Соль
                  <pg_sig>6304300d2a1d5d35cfbdc37ae8490c81</pg_sig>//сигнатура
                </response>
              schema:
                $ref: '#/components/schemas/error'
  /api/kp/init:
    post:
      summary: Перевод с баланса через KazPost
      tags:
        - Дополнительные запросы
      requestBody:
        content:
          application/xml:
            schema:
              type: object
              properties:
                pg_merchant_id:
                  type: integer
                  description: Merchant ID в системе Paybox
                pg_order_id:
                  type: integer
                  description: ID заказа в системе продавца. Рекомендуется уникальное, монотонно возрастающее значение
                pg_amount:
                  type: number
                  description: Сумма перевода
                pg_user_id:
                  type: string
                  description: ID пользователя в системе продавца
                pg_description:
                  type: string
                  description: Описание платежа
                pg_phone:
                  type: string
                  description: Телефонный номер получателя
                pg_uid:
                  type: string
                  description: Номер удостоверения личности получателя
                pg_order_time_limit:
                  type: string
                  format: 'date-time'
                  description: Лимит времени на проведение платежа
                pg_post_link:
                  type: string
                  format: url
                  description: Url на который отправляется ответ о статусе платежа
                pg_salt:
                  type: string
                  description: Случайная строка, состоящая из произвольных цифр и латинских букв
                pg_sig:
                  type: string
                  description: Цифровая подпись запроса
              required:
                - pg_merchant_id
                - pg_order_id
                - pg_amount
                - pg_user_id
                - pg_description
                - pg_phone
                - pg_uid
                - pg_order_time_limit
                - pg_salt
                - pg_sig
      responses:
        200:
          x-summary: В случае успеха, система вернет XML такого вида и аналогичное уведомление на post_link
          description: |
            В случае успеха, клиента нужно будет отправить на адрес полученный в
            `pg_redirect_ur` Клиенту отобразится информационная форма,
            данные в которой он должен предоставить филиалу **KazPost** для снятия наличных.
            Для получения статуса по текущей операции нужно использовать метод запроса
            статуса, который описан ниже.
          content:
            application/xml:
              example: |
                <?xml version="1.0" encoding="UTF- 8"?>
                <response>
                  <pg_payment_id>765432</pg_payment_id>//id транзакции в системе PayBox
                  <pg_merchant_id>123</pg_merchant_id>//merchant_id в системе PayBox
                  <pg_status>ok</pg_status>//статус операции
                  <pg_redirect_url>https://api.paybox.money/api/kp/redirect?param=”1”&param1=”2”</pg_redirect_url>
                  <pg_salt>yNSdZrM1pIA4NjRU5Csdm0L3NC92PZpo</pg_salt>//соль
                  <pg_sig>6304300d2a1d5d35cfbdc37ae8490c81</pg_sig>//сигнатура
                </response>
              schema:
                type: object
                properties:
                  pg_payment_id:
                    type: integer
                    description: id транзакции в системе PayBox
                  pg_merchant_id:
                    type: integer
                    description: id мерчанта в системе PayBox
                  pg_status:
                    type: string
                    description: Статус платежа
                  pg_redirect_url:
                    type: string
                    description: адрес для переадресации
                  pg_salt:
                    type: string
                    description: Случайная строка, состоящая из произвольных цифр и латинских букв
                  pg_sig:
                    type: string
                    description: Цифровая подпись запроса
        default:
          description: В случае неудачи система вернет XML
          content:
            application/xml:
              example: |
                <?xml version="1.0" encoding="UTF-8"?>
                <response>
                  <pg_status>error</pg_status>//статус операции
                  <pg_error_code>101</pg_error_code>//код ошибки
                  <pg_error_description>Empty merchant</pg_error_description>//описание
                  <pg_salt>yNSdZrM1pIA4NjRU5Csdm0L3NC92PZpo</pg_salt> //Соль
                  <pg_sig>6304300d2a1d5d35cfbdc37ae8490c81</pg_sig>//сигнатура
                </response>
              schema:
                $ref: '#/components/schemas/error'
  /api/payment_status:
    post:
      tags:
        - Дополнительные запросы
      summary: Запрос на получение статуса транзакции
      requestBody:
        content:
          application/xml:
            schema:
              type: object
              properties:
                pg_merchant_id:
                  type: integer
                  description: Merchant ID в системе Paybox
                pg_payment_id:
                  type: integer
                  description: ID транзакции в системе Paybox
                pg_order_id:
                  type: integer
                  description: ID заказа в системе продавца
                pg_salt:
                  type: string
                  description: Случайная строка, состоящая из произвольных цифр и латинских букв
                pg_sig:
                  type: string
                  description: Цифровая подпись запроса
              required:
                - pg_merchant_id
                - pg_order_id
                - pg_salt
                - pg_sig
      responses:
        200:
          description: В случае успеха, система вернет XML такого вида и аналогичное уведомление на post_link
          content:
            application/xml:
              example: |
                <?xml version="1.0" encoding="UTF- 8"?>
                <response>
                <pg_payment_id>765432</pg_payment_id>//id транзакции в системе PayBox
                <pg_merchant_id>123</pg_merchant_id>//merchant_id в системе PayBox
                <pg_status>ok</pg_status>//статус транзакции
                <pg_order_id>2</pg_order_id>//номер заказа
                <pg_salt>yNSdZrM1pIA4NjRU5Csdm0L3NC92PZpo</pg_salt>//соль
                <pg_sig>6304300d2a1d5d35cfbdc37ae8490c81</pg_sig>//сигнатура
                </response>
              schema:
                type: object
                properties:
                  pg_payment_id:
                    type: integer
                    description: id транзакции в системе PayBox
                  pg_merchant_id:
                    type: integer
                    description: merchant_id в системе PayBox
                  pg_status:
                    type: string
                    description: статус транзакции
                  pg_order_id:
                    type: integer
                    description: номер заказа
                  pg_salt:
                    type: string
                    description: соль
                  pg_sig:
                    type: string
                    description: сигнатура
components:
  schemas:
    error:
      type: object
      properties:
        pg_status:
          type: string
          description: статус операции
        pg_error_code:
          type: integer
          description: код ошибки
        pg_error_description:
          type: string
          description: описание
        pg_salt:
          type: string
          description: Соль
        pg_sig:
          type: string
          description: сигнатура
      required:
        - pg_status
        - pg_error_code
        - pg_error_description
        - pg_salt
        - pg_sig
